package akka.contrib.persistence.mongodb

import reactivemongo.bson.{BSONDocument, BSONHandler, BSONDocumentWriter, BSONDocumentReader}

/**
  * Trait applied to companion object of BsonMessage subtypes that exposes a Reactive Mongo
  * BSON handler. The handler is normally generated by the 'handler' macro.
  */
trait RxMongoBsonHandler[A] {
  def bsonHandler: BSONDocumentReader[A] with BSONDocumentWriter[A] with BSONHandler[BSONDocument, A]

  private[mongodb] final def readBsonUntyped(document: BSONDocument): AnyRef =
    bsonHandler.read(document).asInstanceOf[AnyRef]

  private[mongodb] final def writeBsonUntyped(t: AnyRef): BSONDocument =
    bsonHandler.write(t.asInstanceOf[A])
}
